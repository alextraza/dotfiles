conky.config = {
-- Conky configuration file
-- to replace the i3status for i3bar
-- This script was partly stolen from a website I can't remember.
	out_to_x = false,
	own_window = false,
	out_to_console = true,
	background = false,
	max_text_width = 0,

-- Update interval in seconds
	update_interval = 2.0,

-- This is the number of times Conky will update before quitting.
-- Set to zero to run forever.
	total_run_times = 0,

-- Shortens units to a single character (kiB->k, GiB->G, etc.). Default is off.
	short_units = true,
-- How strict should if_up be when testing an interface for being up?
-- The value is one of up, link or address, to check for the interface
-- being solely up, being up and having link or being up, having link
-- and an assigned IP address.
	if_up_strictness = 'address',

-- Add spaces to keep things from moving about?  This only affects certain objects.
-- use_spacer should have an argument of left, right, or none
	use_spacer = 'left',

-- Force UTF8? note that UTF8 support required XFT
	override_utf8_locale = false,

-- number of cpu samples to average
-- set to 1 to disable averaging
	cpu_avg_samples = 2,

-- Stuff after 'TEXT' will be formatted on screen
};

conky.text = [=[

# JSON for i3bar
[
    # now playing in ncspot
    {"full_text": "${exec ~/.local/bin/now_play.sh}", "color" : "\#83a598","separator":false,"separator_block_width":40},

#    # Free storage space in root
    {"full_text" : "", "color" : "\#d65d0e", "separator":false,"separator_block_width":3},
    {"full_text" : "${fs_free /}" , "color" : "\#ebdbb2" ,"separator_block_width":16},

#    # Free storage space in /home
    {"full_text" : "", "color" : "\#b8bb26", "separator":false,"separator_block_width":3},
    {"full_text" : "${fs_free /home}" , "color" : "\#ebdbb2" ,"separator_block_width":16},

#   # RAM
    {"full_text":"", "color":"\#fabd2f","separator":false,"separator_block_width":3},
    {"full_text":"${if_match ${memperc} < 40}${memperc}%","color":"\#ebdbb2","separator":true,"separator_block_width":16},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${memperc} < 80}${memperc}%","color":"\#d79921","separator":true,"separator_block_width":16},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${memperc} >= 80}${memperc}%","color":"\#cc241d","separator":true,"separator_block_width":16},\
    {"full_text":"${endif}${endif}${endif}"},

#   # CPU
    {"full_text":"", "color":"\#fabd2f","separator":false,"separator_block_width":3},
    {"full_text":"${if_match ${cpu} < 40}${cpu}%","color":"\#ebdbb2","separator":false,"separator_block_width":10},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${cpu} < 80}${cpu}%","color":"\#d79921","separator":false,"separator_block_width":10},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${cpu} >= 80}${cpu}%","color":"\#cc241d","separator":false,"separator_block_width":10},\
    {"full_text":"${endif}${endif}${endif}"},\
    {"full_text": "${freq_g 1}GHz","separator_block_width":16},

    {"full_text" : "", "color" : "\#d65d0e", "separator":false,"separator_block_width":3},
    {"full_text":"${if_match ${hwmon 1 temp 1cpu} < 40}${hwmon 1 temp 1}°","color":"\#ebdbb2","separator_block_width":10},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${hwmon 1 temp 1cpu} < 60}${hwmon 1 temp 1cpu}°%","color":"\#d79921","separator_block_width":10},\
    {"full_text":"${else}"},\
    {"full_text":"${if_match ${hwmon 1 temp 1cpu} >= 60}${hwmon 1 temp 1cpu}°%","color":"\#cc241d","separator_block_width":10},\
    {"full_text":"${endif}${endif}${endif}"},\

# {"full_text": " ${uptime_short}","color": "\#9ec07c","separator_block_width":16},
    # Networking
    # You might want to change wls2, ens3f1 ans enp0s20u1 to whatever
    # your `ifconfig` command is saying.
    #
    # For most debian/ubuntu changing wls2 to wlan0, ens3f1 to eth0 and
    # enp0s20u1 should work.
    ${if_up wlan0} { "full_text" : " (${wireless_essid wlan0}) ${addr wlan0}" , "color" : "\#fabd2f", "separator":false },\
    {"full_text":"${downspeed wlan0}/s","color":"\#8ec07c", "separator":false},\
    {"full_text":"${upspeed wlan0}/s","color":"\#d3869b", "separator":true,"separator_block_width":16},\
    ${else}\
        ${if_up eth0} { "full_text" : "Eth: ${addr eth0}" , "color" : "\#00ff00" }, ${else}\
           ${if_up enp0s20u1} { "full_text" : "USB: ${addr enp0s20u1}" , "color" :"\#00ff00" }, ${else}\
                { "full_text" : "No Network" , "color" : "\#ff0000" },\
            ${endif}\
        ${endif}\
    ${endif}\

# Volume
#{ "full_text" : "  ${exec amixer get Master -M | grep -oE -m1 "[[:digit:]]*%"}", "color" : "\#ffffff"},

#   # need xkblayout-state installed
    {"full_text": " ${exec ~/.local/bin/mykb}", "color" : "\#ebdbb2"},

# Date
{ "full_text" : " ${time %a %d.%m}" , "color" : "\#d65d0e" },
# Time
{ "full_text" : " ${time %H:%M}" , "color" : "\#fbf1c7"}
],

]=];
